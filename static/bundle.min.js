/*! Copyright 2018 discordboats.club. All rights reserved. */
!function(e){function r(r){for(var t,i,l=r[0],s=r[1],c=r[2],p=0,u=[];p<l.length;p++)i=l[p],n[i]&&u.push(n[i][0]),n[i]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(e[t]=s[t]);for(d&&d(r);u.length;)u.shift()();return a.push.apply(a,c||[]),o()}function o(){for(var e,r=0;r<a.length;r++){for(var o=a[r],t=!0,l=1;l<o.length;l++){var s=o[l];0!==n[s]&&(t=!1)}t&&(a.splice(r--,1),e=i(i.s=o[0]))}return e}var t={},n={1:0},a=[];function i(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=e,i.c=t,i.d=function(e,r,o){i.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:o})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(r,"a",r),r},i.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},i.p="";var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=r,l=l.slice();for(var c=0;c<l.length;c++)r(l[c]);var d=s;a.push([6,0]),o()}([,function(e,r,o){e.exports=o.p+"style.css"},,,function(e,r){e.exports=class{async logOut(){await fetch("/api/logout",{credentials:"same-origin",method:"POST"})}async createBot(e){const r=await fetch("/api/bot",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"},credentials:"same-origin"}),o=await r.json();if(o.error)throw new Error(o.error);if(o.ok)return{ok:o.ok};throw new Error("Bad response")}async deleteBot(e){const r=await fetch("/api/bot/"+encodeURI(e),{method:"DELETE",credentials:"same-origin"}),o=await r.json();if(o.error)throw new Error(o.error);if(o.ok)return{ok:o.ok};throw new Error("Bad response")}async deleteBot(e){const r=await fetch("/api/bot/"+encodeURI(e),{method:"DELETE",credentials:"same-origin"}),o=await r.json();if(o.error)throw new Error(o.error);if(o.ok)return{ok:o.ok};throw new Error("Bad response")}async verifyBot(e,r){const o=await fetch("/api/bot/mod/verify",{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify({verified:e,botID:r})}),t=await o.json();if(t.error)throw new Error(t.error);if(t.ok)return{ok:t.ok};throw new Error("Bad response")}}},function(e,r,o){var t={accessToken:"0086802676e540b2b2cbdcf4849bf692",captureUncaught:!0,payload:{environment:"production"}};!function(e){function r(t){if(o[t])return o[t].exports;var n=o[t]={exports:{},id:t,loaded:!1};return e[t].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var o={};r.m=e,r.c=o,r.p="",r(0)}([function(e,r,o){"use strict";var n=o(1),a=o(4);(t=t||{}).rollbarJsUrl=t.rollbarJsUrl||"https://cdnjs.cloudflare.com/ajax/libs/rollbar.js/2.3.1/rollbar.min.js",t.async=void 0===t.async||t.async;var i=n.setupShim(window,t),l=a(t);window.rollbar=n.Rollbar,i.loadFull(window,document,!t.async,t,l)},function(e,r,o){"use strict";function t(e){return function(){try{return e.apply(this,arguments)}catch(e){try{console.error("[Rollbar]: Internal error",e)}catch(e){}}}}function n(e,r){this.options=e,this._rollbarOldOnError=null;var o=l++;this.shimId=function(){return o},window&&window._rollbarShims&&(window._rollbarShims[o]={handler:r,messages:[]})}function a(e){return t(function(){var r=Array.prototype.slice.call(arguments,0),o={shim:this,method:e,args:r,ts:new Date};window._rollbarShims[this.shimId()].messages.push(o)})}var i=o(2),l=0,s=o(3).bind(null,function(e,r){return new n(e,r)});n.prototype.loadFull=function(e,r,o,n,a){var i=!1,l=r.createElement("script"),s=r.getElementsByTagName("script")[0],c=s.parentNode;l.crossOrigin="",l.src=n.rollbarJsUrl,o||(l.async=!0),l.onload=l.onreadystatechange=t(function(){if(!(i||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){l.onload=l.onreadystatechange=null;try{c.removeChild(l)}catch(e){}i=!0,function(){var r;if(void 0===e._rollbarDidLoad){r=new Error("rollbar.js did not load");for(var o,t,n,i,l=0;o=e._rollbarShims[l++];)for(o=o.messages||[];t=o.shift();)for(n=t.args||[],l=0;l<n.length;++l)if("function"==typeof(i=n[l])){i(r);break}}"function"==typeof a&&a(r)}()}}),c.insertBefore(l,s)},n.prototype.wrap=function(e,r,o){try{var t;if(t="function"==typeof r?r:function(){return r||{}},"function"!=typeof e)return e;if(e._isWrap)return e;if(!e._rollbar_wrapped&&(e._rollbar_wrapped=function(){o&&"function"==typeof o&&o.apply(this,arguments);try{return e.apply(this,arguments)}catch(o){var r=o;throw"string"==typeof r&&(r=new String(r)),r._rollbarContext=t()||{},r._rollbarContext._wrappedSource=e.toString(),window._rollbarWrappedError=r,r}},e._rollbar_wrapped._isWrap=!0,e.hasOwnProperty))for(var n in e)e.hasOwnProperty(n)&&(e._rollbar_wrapped[n]=e[n]);return e._rollbar_wrapped}catch(r){return e}};for(var c="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,captureDomContentLoaded,captureLoad".split(","),d=0;d<c.length;++d)n.prototype[c[d]]=a(c[d]);e.exports={setupShim:function(e,r){var o=r.globalAlias||"Rollbar";if("object"==typeof e[o])return e[o];e._rollbarShims={},e._rollbarWrappedError=null;var n=new s(r);return t(function(){r.captureUncaught&&(n._rollbarOldOnError=e.onerror,i.captureUncaughtExceptions(e,n,!0),i.wrapGlobals(e,n,!0)),r.captureUnhandledRejections&&i.captureUnhandledRejections(e,n,!0);var t=r.autoInstrument;return(void 0===t||!0===t||"object"==typeof t&&t.network)&&e.addEventListener&&(e.addEventListener("load",n.captureLoad.bind(n)),e.addEventListener("DOMContentLoaded",n.captureDomContentLoaded.bind(n))),e[o]=n,n})()},Rollbar:s}},function(e,r){"use strict";function o(e,r,o){if(r.hasOwnProperty&&r.hasOwnProperty("addEventListener")){for(var t=r.addEventListener;t._rollbarOldAdd&&t.belongsToShim;)t=t._rollbarOldAdd;var n=function(r,o,n){t.call(this,r,e.wrap(o),n)};n._rollbarOldAdd=t,n.belongsToShim=o,r.addEventListener=n;for(var a=r.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var i=function(e,r,o){a.call(this,e,r&&r._rollbar_wrapped||r,o)};i._rollbarOldRemove=a,i.belongsToShim=o,r.removeEventListener=i}}e.exports={captureUncaughtExceptions:function(e,r,o){if(e){var t;"function"==typeof r._rollbarOldOnError?t=r._rollbarOldOnError:e.onerror&&!e.onerror.belongsToShim&&(t=e.onerror,r._rollbarOldOnError=t);var n=function(){var o=Array.prototype.slice.call(arguments,0);!function(e,r,o,t){e._rollbarWrappedError&&(t[4]||(t[4]=e._rollbarWrappedError),t[5]||(t[5]=e._rollbarWrappedError._rollbarContext),e._rollbarWrappedError=null),r.handleUncaughtException.apply(r,t),o&&o.apply(e,t)}(e,r,t,o)};n.belongsToShim=o,e.onerror=n}},captureUnhandledRejections:function(e,r,o){if(e){"function"==typeof e._rollbarURH&&e._rollbarURH.belongsToShim&&e.removeEventListener("unhandledrejection",e._rollbarURH);var t=function(e){var o=e.reason,t=e.promise,n=e.detail;!o&&n&&(o=n.reason,t=n.promise),r&&r.handleUnhandledRejection&&r.handleUnhandledRejection(o,t)};t.belongsToShim=o,e._rollbarURH=t,e.addEventListener("unhandledrejection",t)}},wrapGlobals:function(e,r,t){if(e){var n,a,i="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(n=0;n<i.length;++n)e[a=i[n]]&&e[a].prototype&&o(r,e[a].prototype,t)}}}},function(e,r){"use strict";function o(e,r){this.impl=e(r,this),this.options=r,function(e){for(var r=function(e){return function(){var r=Array.prototype.slice.call(arguments,0);if(this.impl[e])return this.impl[e].apply(this.impl,r)}},o="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureDomContentLoaded,captureLoad".split(","),t=0;t<o.length;t++)e[o[t]]=r(o[t])}(o.prototype)}o.prototype._swapAndProcessMessages=function(e,r){this.impl=e(this.options);for(var o,t,n;o=r.shift();)t=o.method,n=o.args,this[t]&&"function"==typeof this[t]&&("captureDomContentLoaded"===t||"captureLoad"===t?this[t].apply(this,[n[0],o.ts]):this[t].apply(this,n));return this},e.exports=o},function(e,r){"use strict";e.exports=function(e){return function(r){if(!r&&!window._rollbarInitialized){for(var o,t,n=(e=e||{}).globalAlias||"Rollbar",a=window.rollbar,i=function(e){return new a(e)},l=0;o=window._rollbarShims[l++];)t||(t=o.handler),o.handler._swapAndProcessMessages(i,o.messages);window[n]=t,window._rollbarInitialized=!0}}}}]);const n=o(4),a=o(0),i=o(3),l=new n;var s;console.log("Welcome to discordboats.club! Why are you looking here? :P"),console.log("%cðŸš« Warning! ðŸš«","color: red; font-weight: bold; font-size: x-large"),console.log("%cTyping anything here could make bad stuff happen!","color: #e91e63; font-size: large"),a(window).ready(async()=>{document.querySelectorAll(".modal").forEach(e=>i.Modal.init(e)),i.Dropdown.init(document.querySelector("#profile-dropdown-trigger"),{ecoverTrigger:!1}),document.querySelector("#log-out-indd")&&document.querySelector("#log-out-indd").addEventListener("click",async e=>{await l.logOut(),window.localStorage.setItem("toastOnNext","Logged out"),"/"===window.location.pathname?window.location.reload():window.location.replace("/")}),window.localStorage.getItem("toastOnNext")&&(i.toast({html:window.localStorage.toastOnNext}),window.localStorage.removeItem("toastOnNext")),document.location.href.includes("/dashboard/new")?(i.FormSelect.init(a("select#newbot"),{classes:"newbot-dd-wrap"}),a("form").submit(async e=>{e.preventDefault(),console.log(e);let r=i.FormSelect.getInstance(a("select")).getSelectedValues()[0];"none"===r&&(r=void 0);try{await l.createBot({id:e.target[0].value,library:r,prefix:e.target[3].value,website:(s=e.target[4].value,""===s.trim()?void 0:s),invite:e.target[5].value||`https://discordapp.com/oauth2/authorize?client_id=${encodeURI(e.target[0].value)}&scope=bot&permissions=0`,shortDescription:e.target[6].value,longDescription:e.target[7].value}),i.toast({html:"Submitted new bot."})}catch(e){if("ValidationError"===e.message)return i.toast({html:"Invalid details."});throw i.toast({html:"An error occurred."}),e}})):document.location.href.includes("/bot/")&&a("#delete-bot-action").click(async e=>{await l.deleteBot(document.querySelector("#delete-bot-modal").getAttribute("data-bot-id")),window.localStorage.setItem("toastOnNext","Deleted bot."),document.location.replace("/")});const e=document.querySelector("#themeControl");let r="true"==localStorage.getItem("darkTheme");function o(){r?a(document.body).addClass("dark-theme"):a(document.body).removeClass("dark-theme")}e.checked=r,o(),e.addEventListener("change",e=>{r=e.target.checked,localStorage.setItem("darkTheme",JSON.stringify(e.target.checked)),o()})})},function(e,r,o){o(5),e.exports=o(1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,