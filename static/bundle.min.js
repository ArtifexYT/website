/*! Copyright 2018 discordboats.club. All rights reserved. */
!function(r){function e(e){for(var t,i,l=e[0],s=e[1],c=e[2],p=0,u=[];p<l.length;p++)i=l[p],n[i]&&u.push(n[i][0]),n[i]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(r[t]=s[t]);for(d&&d(e);u.length;)u.shift()();return a.push.apply(a,c||[]),o()}function o(){for(var r,e=0;e<a.length;e++){for(var o=a[e],t=!0,l=1;l<o.length;l++){var s=o[l];0!==n[s]&&(t=!1)}t&&(a.splice(e--,1),r=i(i.s=o[0]))}return r}var t={},n={1:0},a=[];function i(e){if(t[e])return t[e].exports;var o=t[e]={i:e,l:!1,exports:{}};return r[e].call(o.exports,o,o.exports,i),o.l=!0,o.exports}i.m=r,i.c=t,i.d=function(r,e,o){i.o(r,e)||Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:o})},i.r=function(r){Object.defineProperty(r,"__esModule",{value:!0})},i.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return i.d(e,"a",e),e},i.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},i.p="";var l=window.webpackJsonp=window.webpackJsonp||[],s=l.push.bind(l);l.push=e,l=l.slice();for(var c=0;c<l.length;c++)e(l[c]);var d=s;a.push([6,0]),o()}([,function(r,e,o){r.exports=o.p+"style.css"},,,function(r,e){r.exports=class{async logOut(){await fetch("/api/logout",{credentials:"same-origin",method:"POST"})}async createBot(r){const e=await fetch("/api/bot",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"},credentials:"same-origin"}),o=await e.json();if(o.error)throw new Error(o.error);if(o.ok)return{ok:o.ok};throw new Error("Bad response")}async deleteBot(r){const e=await fetch("/api/bot/"+encodeURI(r),{method:"DELETE",credentials:"same-origin"}),o=await e.json();if(o.error)throw new Error(o.error);if(o.ok)return{ok:o.ok};throw new Error("Bad response")}async deleteBot(r){const e=await fetch("/api/bot/"+encodeURI(r),{method:"DELETE",credentials:"same-origin"}),o=await e.json();if(o.error)throw new Error(o.error);if(o.ok)return{ok:o.ok};throw new Error("Bad response")}async verifyBot(r,e){const o=await fetch("/api/bot/mod/verify",{method:"POST",credentials:"same-origin",headers:{"Content-Type":"application/json"},body:JSON.stringify({verified:r,botID:e})}),t=await o.json();if(t.error)throw new Error(t.error);if(t.ok)return{ok:t.ok};throw new Error("Bad response")}}},function(r,e,o){var t={accessToken:"0086802676e540b2b2cbdcf4849bf692",captureUncaught:!0,payload:{environment:"production"}};!function(r){function e(t){if(o[t])return o[t].exports;var n=o[t]={exports:{},id:t,loaded:!1};return r[t].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var o={};e.m=r,e.c=o,e.p="",e(0)}([function(r,e,o){"use strict";var n=o(1),a=o(4);(t=t||{}).rollbarJsUrl=t.rollbarJsUrl||"https://cdnjs.cloudflare.com/ajax/libs/rollbar.js/2.3.1/rollbar.min.js",t.async=void 0===t.async||t.async;var i=n.setupShim(window,t),l=a(t);window.rollbar=n.Rollbar,i.loadFull(window,document,!t.async,t,l)},function(r,e,o){"use strict";function t(r){return function(){try{return r.apply(this,arguments)}catch(r){try{console.error("[Rollbar]: Internal error",r)}catch(r){}}}}function n(r,e){this.options=r,this._rollbarOldOnError=null;var o=l++;this.shimId=function(){return o},window&&window._rollbarShims&&(window._rollbarShims[o]={handler:e,messages:[]})}function a(r){return t(function(){var e=Array.prototype.slice.call(arguments,0),o={shim:this,method:r,args:e,ts:new Date};window._rollbarShims[this.shimId()].messages.push(o)})}var i=o(2),l=0,s=o(3).bind(null,function(r,e){return new n(r,e)});n.prototype.loadFull=function(r,e,o,n,a){var i=!1,l=e.createElement("script"),s=e.getElementsByTagName("script")[0],c=s.parentNode;l.crossOrigin="",l.src=n.rollbarJsUrl,o||(l.async=!0),l.onload=l.onreadystatechange=t(function(){if(!(i||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){l.onload=l.onreadystatechange=null;try{c.removeChild(l)}catch(r){}i=!0,function(){var e;if(void 0===r._rollbarDidLoad){e=new Error("rollbar.js did not load");for(var o,t,n,i,l=0;o=r._rollbarShims[l++];)for(o=o.messages||[];t=o.shift();)for(n=t.args||[],l=0;l<n.length;++l)if("function"==typeof(i=n[l])){i(e);break}}"function"==typeof a&&a(e)}()}}),c.insertBefore(l,s)},n.prototype.wrap=function(r,e,o){try{var t;if(t="function"==typeof e?e:function(){return e||{}},"function"!=typeof r)return r;if(r._isWrap)return r;if(!r._rollbar_wrapped&&(r._rollbar_wrapped=function(){o&&"function"==typeof o&&o.apply(this,arguments);try{return r.apply(this,arguments)}catch(o){var e=o;throw"string"==typeof e&&(e=new String(e)),e._rollbarContext=t()||{},e._rollbarContext._wrappedSource=r.toString(),window._rollbarWrappedError=e,e}},r._rollbar_wrapped._isWrap=!0,r.hasOwnProperty))for(var n in r)r.hasOwnProperty(n)&&(r._rollbar_wrapped[n]=r[n]);return r._rollbar_wrapped}catch(e){return r}};for(var c="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,captureDomContentLoaded,captureLoad".split(","),d=0;d<c.length;++d)n.prototype[c[d]]=a(c[d]);r.exports={setupShim:function(r,e){var o=e.globalAlias||"Rollbar";if("object"==typeof r[o])return r[o];r._rollbarShims={},r._rollbarWrappedError=null;var n=new s(e);return t(function(){e.captureUncaught&&(n._rollbarOldOnError=r.onerror,i.captureUncaughtExceptions(r,n,!0),i.wrapGlobals(r,n,!0)),e.captureUnhandledRejections&&i.captureUnhandledRejections(r,n,!0);var t=e.autoInstrument;return(void 0===t||!0===t||"object"==typeof t&&t.network)&&r.addEventListener&&(r.addEventListener("load",n.captureLoad.bind(n)),r.addEventListener("DOMContentLoaded",n.captureDomContentLoaded.bind(n))),r[o]=n,n})()},Rollbar:s}},function(r,e){"use strict";function o(r,e,o){if(e.hasOwnProperty&&e.hasOwnProperty("addEventListener")){for(var t=e.addEventListener;t._rollbarOldAdd&&t.belongsToShim;)t=t._rollbarOldAdd;var n=function(e,o,n){t.call(this,e,r.wrap(o),n)};n._rollbarOldAdd=t,n.belongsToShim=o,e.addEventListener=n;for(var a=e.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var i=function(r,e,o){a.call(this,r,e&&e._rollbar_wrapped||e,o)};i._rollbarOldRemove=a,i.belongsToShim=o,e.removeEventListener=i}}r.exports={captureUncaughtExceptions:function(r,e,o){if(r){var t;"function"==typeof e._rollbarOldOnError?t=e._rollbarOldOnError:r.onerror&&!r.onerror.belongsToShim&&(t=r.onerror,e._rollbarOldOnError=t);var n=function(){var o=Array.prototype.slice.call(arguments,0);!function(r,e,o,t){r._rollbarWrappedError&&(t[4]||(t[4]=r._rollbarWrappedError),t[5]||(t[5]=r._rollbarWrappedError._rollbarContext),r._rollbarWrappedError=null),e.handleUncaughtException.apply(e,t),o&&o.apply(r,t)}(r,e,t,o)};n.belongsToShim=o,r.onerror=n}},captureUnhandledRejections:function(r,e,o){if(r){"function"==typeof r._rollbarURH&&r._rollbarURH.belongsToShim&&r.removeEventListener("unhandledrejection",r._rollbarURH);var t=function(r){var o=r.reason,t=r.promise,n=r.detail;!o&&n&&(o=n.reason,t=n.promise),e&&e.handleUnhandledRejection&&e.handleUnhandledRejection(o,t)};t.belongsToShim=o,r._rollbarURH=t,r.addEventListener("unhandledrejection",t)}},wrapGlobals:function(r,e,t){if(r){var n,a,i="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(n=0;n<i.length;++n)r[a=i[n]]&&r[a].prototype&&o(e,r[a].prototype,t)}}}},function(r,e){"use strict";function o(r,e){this.impl=r(e,this),this.options=e,function(r){for(var e=function(r){return function(){var e=Array.prototype.slice.call(arguments,0);if(this.impl[r])return this.impl[r].apply(this.impl,e)}},o="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureDomContentLoaded,captureLoad".split(","),t=0;t<o.length;t++)r[o[t]]=e(o[t])}(o.prototype)}o.prototype._swapAndProcessMessages=function(r,e){this.impl=r(this.options);for(var o,t,n;o=e.shift();)t=o.method,n=o.args,this[t]&&"function"==typeof this[t]&&("captureDomContentLoaded"===t||"captureLoad"===t?this[t].apply(this,[n[0],o.ts]):this[t].apply(this,n));return this},r.exports=o},function(r,e){"use strict";r.exports=function(r){return function(e){if(!e&&!window._rollbarInitialized){for(var o,t,n=(r=r||{}).globalAlias||"Rollbar",a=window.rollbar,i=function(r){return new a(r)},l=0;o=window._rollbarShims[l++];)t||(t=o.handler),o.handler._swapAndProcessMessages(i,o.messages);window[n]=t,window._rollbarInitialized=!0}}}}]);const n=o(4),a=o(0),i=o(3),l=new n;var s;console.log("Welcome to discordboats.club! Why are you looking here? :P"),console.log("%cðŸš« Warning! ðŸš«","color: red; font-weight: bold; font-size: x-large"),console.log("%cTyping anything here could make bad stuff happen!","color: #e91e63; font-size: large"),a(window).ready(async()=>{document.querySelectorAll(".modal").forEach(r=>i.Modal.init(r)),i.Dropdown.init(document.querySelector("#profile-dropdown-trigger"),{ecoverTrigger:!1}),document.querySelector("#log-out-indd").addEventListener("click",async r=>{await l.logOut(),window.localStorage.setItem("toastOnNext","Logged out"),"/"===window.location.pathname?window.location.reload():window.location.replace("/")}),window.localStorage.getItem("toastOnNext")&&(i.toast({html:window.localStorage.toastOnNext}),window.localStorage.removeItem("toastOnNext")),document.location.href.includes("/dashboard/new")?(i.FormSelect.init(a("select#newbot"),{classes:"newbot-dd-wrap"}),a("form").submit(async r=>{r.preventDefault(),console.log(r);let e=i.FormSelect.getInstance(a("select")).getSelectedValues()[0];"none"===e&&(e=void 0);try{await l.createBot({id:r.target[0].value,library:e,prefix:r.target[3].value,website:(s=r.target[4].value,""===s.trim()?void 0:s),invite:r.target[5].value||`https://discordapp.com/oauth2/authorize?client_id=${encodeURI(r.target[0].value)}&scope=bot&permissions=0`,shortDescription:r.target[6].value,longDescription:r.target[7].value}),i.toast({html:"Submitted new bot."})}catch(r){if("ValidationError"===r.message)return i.toast({html:"Invalid details."});throw i.toast({html:"An error occurred."}),r}})):document.location.href.includes("/bot/")&&a("#delete-bot-action").click(async r=>{await l.deleteBot(document.querySelector("#delete-bot-modal").getAttribute("data-bot-id")),window.localStorage.setItem("toastOnNext","Deleted bot."),document.location.replace("/")})}),window.api=l},function(r,e,o){o(5),r.exports=o(1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,