/*! Copyright 2018 discordboats.club. All rights reserved. */
!function(r){function e(e){for(var o,l,i=e[0],s=e[1],c=e[2],p=0,u=[];p<i.length;p++)l=i[p],n[l]&&u.push(n[l][0]),n[l]=0;for(o in s)Object.prototype.hasOwnProperty.call(s,o)&&(r[o]=s[o]);for(d&&d(e);u.length;)u.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var r,e=0;e<a.length;e++){for(var t=a[e],o=!0,i=1;i<t.length;i++){var s=t[i];0!==n[s]&&(o=!1)}o&&(a.splice(e--,1),r=l(l.s=t[0]))}return r}var o={},n={1:0},a=[];function l(e){if(o[e])return o[e].exports;var t=o[e]={i:e,l:!1,exports:{}};return r[e].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=r,l.c=o,l.d=function(r,e,t){l.o(r,e)||Object.defineProperty(r,e,{configurable:!1,enumerable:!0,get:t})},l.r=function(r){Object.defineProperty(r,"__esModule",{value:!0})},l.n=function(r){var e=r&&r.__esModule?function(){return r.default}:function(){return r};return l.d(e,"a",e),e},l.o=function(r,e){return Object.prototype.hasOwnProperty.call(r,e)},l.p="";var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=e,i=i.slice();for(var c=0;c<i.length;c++)e(i[c]);var d=s;a.push([6,0]),t()}([,function(r,e,t){r.exports=t.p+"style.css"},,,function(r,e){r.exports=class{async getMe(){if(this._me)return this._me;const r=await fetch("/api/me",{credentials:"same-origin"}),e=await r.json();if(e.error)throw new Error(e.error);return this._me=e,e}async logOut(){await fetch("/api/logout",{credentials:"same-origin",method:"POST"})}async createBot(r){const e=await fetch("/api/bot",{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"},credentials:"same-origin"}),t=await e.json();if(t.error)throw new Error(t.error);if(t.ok)return{ok:t.ok};throw new Error("Bad response")}async deleteBot(r){const e=await fetch("/api/bot/"+encodeURI(r),{method:"DELETE",credentials:"same-origin"}),t=await e.json();if(t.error)throw new Error(t.error);if(t.ok)return{ok:t.ok};throw new Error("Bad response")}}},function(r,e,t){var o={accessToken:"0086802676e540b2b2cbdcf4849bf692",captureUncaught:!0,payload:{environment:"production"}};!function(r){function e(o){if(t[o])return t[o].exports;var n=t[o]={exports:{},id:o,loaded:!1};return r[o].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var t={};e.m=r,e.c=t,e.p="",e(0)}([function(r,e,t){"use strict";var n=t(1),a=t(4);(o=o||{}).rollbarJsUrl=o.rollbarJsUrl||"https://cdnjs.cloudflare.com/ajax/libs/rollbar.js/2.3.1/rollbar.min.js",o.async=void 0===o.async||o.async;var l=n.setupShim(window,o),i=a(o);window.rollbar=n.Rollbar,l.loadFull(window,document,!o.async,o,i)},function(r,e,t){"use strict";function o(r){return function(){try{return r.apply(this,arguments)}catch(r){try{console.error("[Rollbar]: Internal error",r)}catch(r){}}}}function n(r,e){this.options=r,this._rollbarOldOnError=null;var t=i++;this.shimId=function(){return t},window&&window._rollbarShims&&(window._rollbarShims[t]={handler:e,messages:[]})}function a(r){return o(function(){var e=Array.prototype.slice.call(arguments,0),t={shim:this,method:r,args:e,ts:new Date};window._rollbarShims[this.shimId()].messages.push(t)})}var l=t(2),i=0,s=t(3).bind(null,function(r,e){return new n(r,e)});n.prototype.loadFull=function(r,e,t,n,a){var l=!1,i=e.createElement("script"),s=e.getElementsByTagName("script")[0],c=s.parentNode;i.crossOrigin="",i.src=n.rollbarJsUrl,t||(i.async=!0),i.onload=i.onreadystatechange=o(function(){if(!(l||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){i.onload=i.onreadystatechange=null;try{c.removeChild(i)}catch(r){}l=!0,function(){var e;if(void 0===r._rollbarDidLoad){e=new Error("rollbar.js did not load");for(var t,o,n,l,i=0;t=r._rollbarShims[i++];)for(t=t.messages||[];o=t.shift();)for(n=o.args||[],i=0;i<n.length;++i)if("function"==typeof(l=n[i])){l(e);break}}"function"==typeof a&&a(e)}()}}),c.insertBefore(i,s)},n.prototype.wrap=function(r,e,t){try{var o;if(o="function"==typeof e?e:function(){return e||{}},"function"!=typeof r)return r;if(r._isWrap)return r;if(!r._rollbar_wrapped&&(r._rollbar_wrapped=function(){t&&"function"==typeof t&&t.apply(this,arguments);try{return r.apply(this,arguments)}catch(t){var e=t;throw"string"==typeof e&&(e=new String(e)),e._rollbarContext=o()||{},e._rollbarContext._wrappedSource=r.toString(),window._rollbarWrappedError=e,e}},r._rollbar_wrapped._isWrap=!0,r.hasOwnProperty))for(var n in r)r.hasOwnProperty(n)&&(r._rollbar_wrapped[n]=r[n]);return r._rollbar_wrapped}catch(e){return r}};for(var c="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,captureDomContentLoaded,captureLoad".split(","),d=0;d<c.length;++d)n.prototype[c[d]]=a(c[d]);r.exports={setupShim:function(r,e){var t=e.globalAlias||"Rollbar";if("object"==typeof r[t])return r[t];r._rollbarShims={},r._rollbarWrappedError=null;var n=new s(e);return o(function(){e.captureUncaught&&(n._rollbarOldOnError=r.onerror,l.captureUncaughtExceptions(r,n,!0),l.wrapGlobals(r,n,!0)),e.captureUnhandledRejections&&l.captureUnhandledRejections(r,n,!0);var o=e.autoInstrument;return(void 0===o||!0===o||"object"==typeof o&&o.network)&&r.addEventListener&&(r.addEventListener("load",n.captureLoad.bind(n)),r.addEventListener("DOMContentLoaded",n.captureDomContentLoaded.bind(n))),r[t]=n,n})()},Rollbar:s}},function(r,e){"use strict";function t(r,e,t){if(e.hasOwnProperty&&e.hasOwnProperty("addEventListener")){for(var o=e.addEventListener;o._rollbarOldAdd&&o.belongsToShim;)o=o._rollbarOldAdd;var n=function(e,t,n){o.call(this,e,r.wrap(t),n)};n._rollbarOldAdd=o,n.belongsToShim=t,e.addEventListener=n;for(var a=e.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var l=function(r,e,t){a.call(this,r,e&&e._rollbar_wrapped||e,t)};l._rollbarOldRemove=a,l.belongsToShim=t,e.removeEventListener=l}}r.exports={captureUncaughtExceptions:function(r,e,t){if(r){var o;"function"==typeof e._rollbarOldOnError?o=e._rollbarOldOnError:r.onerror&&!r.onerror.belongsToShim&&(o=r.onerror,e._rollbarOldOnError=o);var n=function(){var t=Array.prototype.slice.call(arguments,0);!function(r,e,t,o){r._rollbarWrappedError&&(o[4]||(o[4]=r._rollbarWrappedError),o[5]||(o[5]=r._rollbarWrappedError._rollbarContext),r._rollbarWrappedError=null),e.handleUncaughtException.apply(e,o),t&&t.apply(r,o)}(r,e,o,t)};n.belongsToShim=t,r.onerror=n}},captureUnhandledRejections:function(r,e,t){if(r){"function"==typeof r._rollbarURH&&r._rollbarURH.belongsToShim&&r.removeEventListener("unhandledrejection",r._rollbarURH);var o=function(r){var t=r.reason,o=r.promise,n=r.detail;!t&&n&&(t=n.reason,o=n.promise),e&&e.handleUnhandledRejection&&e.handleUnhandledRejection(t,o)};o.belongsToShim=t,r._rollbarURH=o,r.addEventListener("unhandledrejection",o)}},wrapGlobals:function(r,e,o){if(r){var n,a,l="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(n=0;n<l.length;++n)r[a=l[n]]&&r[a].prototype&&t(e,r[a].prototype,o)}}}},function(r,e){"use strict";function t(r,e){this.impl=r(e,this),this.options=e,function(r){for(var e=function(r){return function(){var e=Array.prototype.slice.call(arguments,0);if(this.impl[r])return this.impl[r].apply(this.impl,e)}},t="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureDomContentLoaded,captureLoad".split(","),o=0;o<t.length;o++)r[t[o]]=e(t[o])}(t.prototype)}t.prototype._swapAndProcessMessages=function(r,e){this.impl=r(this.options);for(var t,o,n;t=e.shift();)o=t.method,n=t.args,this[o]&&"function"==typeof this[o]&&("captureDomContentLoaded"===o||"captureLoad"===o?this[o].apply(this,[n[0],t.ts]):this[o].apply(this,n));return this},r.exports=t},function(r,e){"use strict";r.exports=function(r){return function(e){if(!e&&!window._rollbarInitialized){for(var t,o,n=(r=r||{}).globalAlias||"Rollbar",a=window.rollbar,l=function(r){return new a(r)},i=0;t=window._rollbarShims[i++];)o||(o=t.handler),t.handler._swapAndProcessMessages(l,t.messages);window[n]=o,window._rollbarInitialized=!0}}}}]);const n=t(4),a=t(0),l=t(3),i=new n;var s;console.log("Welcome to discordboats.club! Why are you looking here? :P"),console.log("%cðŸš« Warning! ðŸš«","color: red; font-weight: bold; font-size: x-large"),console.log("%cTyping anything here could make bad stuff happen!","color: #e91e63; font-size: large"),a(window).ready(async()=>{document.querySelectorAll(".modal").forEach(r=>l.Modal.init(r)),window.localStorage.toastOnNext&&(l.toast({html:window.localStorage.toastOnNext}),window.localStorage.removeItem("toastOnNext")),document.location.href.includes("/dashboard/new")?(l.FormSelect.init(a("select#newbot"),{classes:"newbot-dd-wrap"}),a("form").submit(async r=>{r.preventDefault(),console.log(r);let e=l.FormSelect.getInstance(a("select")).getSelectedValues()[0];"none"===e&&(e=void 0);try{await i.createBot({id:r.target[0].value,library:e,prefix:r.target[3].value,website:(s=r.target[4].value,""===s.trim()?void 0:s),invite:r.target[5].value||`https://discordapp.com/oauth2/authorize?client_id=${encodeURI(r.target[1].value)}&scope=bot&permissions=0`,shortDescription:r.target[6].value,longDescription:r.target[7].value}),l.toast({html:"Submitted bot!"})}catch(r){if("ValidationError"===r.message)return l.toast({html:"Invalid details!"});throw l.toast({html:"Error while submitting bot!"}),r}})):document.location.href.includes("/bot/")&&a("#delete-bot-action").click(async r=>{await i.deleteBot(document.querySelector("#delete-bot-modal").getAttribute("data-bot-id")),window.localStorage.setItem("toastOnNext","Deleted bot."),document.location.replace("/")})})},function(r,e,t){t(5),r.exports=t(1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,