/*! Copyright 2018 discordboats.club. All rights reserved. */
!function(e){function r(r){for(var o,l,i=r[0],s=r[1],c=r[2],p=0,u=[];p<i.length;p++)l=i[p],n[l]&&u.push(n[l][0]),n[l]=0;for(o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o]);for(d&&d(r);u.length;)u.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var e,r=0;r<a.length;r++){for(var t=a[r],o=!0,i=1;i<t.length;i++){var s=t[i];0!==n[s]&&(o=!1)}o&&(a.splice(r--,1),e=l(l.s=t[0]))}return e}var o={},n={1:0},a=[];function l(r){if(o[r])return o[r].exports;var t=o[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=o,l.d=function(e,r,t){l.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:t})},l.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},l.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(r,"a",r),r},l.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},l.p="";var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=r,i=i.slice();for(var c=0;c<i.length;c++)r(i[c]);var d=s;a.push([6,0]),t()}([,function(e,r,t){e.exports=t.p+"style.css"},,,function(e,r){e.exports=class{async logOut(){await fetch("/api/logout",{credentials:"same-origin",method:"POST"})}async createBot(e){const r=await fetch("/api/bot",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"},credentials:"same-origin"}),t=await r.json();if(t.error)throw new Error(t.error);if(t.ok)return{ok:t.ok};throw new Error("Bad response")}async deleteBot(e){const r=await fetch("/api/bot/"+encodeURI(e),{method:"DELETE",credentials:"same-origin"}),t=await r.json();if(t.error)throw new Error(t.error);if(t.ok)return{ok:t.ok};throw new Error("Bad response")}}},function(e,r,t){var o={accessToken:"0086802676e540b2b2cbdcf4849bf692",captureUncaught:!0,payload:{environment:"production"}};!function(e){function r(o){if(t[o])return t[o].exports;var n=t[o]={exports:{},id:o,loaded:!1};return e[o].call(n.exports,n,n.exports,r),n.loaded=!0,n.exports}var t={};r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){"use strict";var n=t(1),a=t(4);(o=o||{}).rollbarJsUrl=o.rollbarJsUrl||"https://cdnjs.cloudflare.com/ajax/libs/rollbar.js/2.3.1/rollbar.min.js",o.async=void 0===o.async||o.async;var l=n.setupShim(window,o),i=a(o);window.rollbar=n.Rollbar,l.loadFull(window,document,!o.async,o,i)},function(e,r,t){"use strict";function o(e){return function(){try{return e.apply(this,arguments)}catch(e){try{console.error("[Rollbar]: Internal error",e)}catch(e){}}}}function n(e,r){this.options=e,this._rollbarOldOnError=null;var t=i++;this.shimId=function(){return t},window&&window._rollbarShims&&(window._rollbarShims[t]={handler:r,messages:[]})}function a(e){return o(function(){var r=Array.prototype.slice.call(arguments,0),t={shim:this,method:e,args:r,ts:new Date};window._rollbarShims[this.shimId()].messages.push(t)})}var l=t(2),i=0,s=t(3).bind(null,function(e,r){return new n(e,r)});n.prototype.loadFull=function(e,r,t,n,a){var l=!1,i=r.createElement("script"),s=r.getElementsByTagName("script")[0],c=s.parentNode;i.crossOrigin="",i.src=n.rollbarJsUrl,t||(i.async=!0),i.onload=i.onreadystatechange=o(function(){if(!(l||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState)){i.onload=i.onreadystatechange=null;try{c.removeChild(i)}catch(e){}l=!0,function(){var r;if(void 0===e._rollbarDidLoad){r=new Error("rollbar.js did not load");for(var t,o,n,l,i=0;t=e._rollbarShims[i++];)for(t=t.messages||[];o=t.shift();)for(n=o.args||[],i=0;i<n.length;++i)if("function"==typeof(l=n[i])){l(r);break}}"function"==typeof a&&a(r)}()}}),c.insertBefore(i,s)},n.prototype.wrap=function(e,r,t){try{var o;if(o="function"==typeof r?r:function(){return r||{}},"function"!=typeof e)return e;if(e._isWrap)return e;if(!e._rollbar_wrapped&&(e._rollbar_wrapped=function(){t&&"function"==typeof t&&t.apply(this,arguments);try{return e.apply(this,arguments)}catch(t){var r=t;throw"string"==typeof r&&(r=new String(r)),r._rollbarContext=o()||{},r._rollbarContext._wrappedSource=e.toString(),window._rollbarWrappedError=r,r}},e._rollbar_wrapped._isWrap=!0,e.hasOwnProperty))for(var n in e)e.hasOwnProperty(n)&&(e._rollbar_wrapped[n]=e[n]);return e._rollbar_wrapped}catch(r){return e}};for(var c="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,captureDomContentLoaded,captureLoad".split(","),d=0;d<c.length;++d)n.prototype[c[d]]=a(c[d]);e.exports={setupShim:function(e,r){var t=r.globalAlias||"Rollbar";if("object"==typeof e[t])return e[t];e._rollbarShims={},e._rollbarWrappedError=null;var n=new s(r);return o(function(){r.captureUncaught&&(n._rollbarOldOnError=e.onerror,l.captureUncaughtExceptions(e,n,!0),l.wrapGlobals(e,n,!0)),r.captureUnhandledRejections&&l.captureUnhandledRejections(e,n,!0);var o=r.autoInstrument;return(void 0===o||!0===o||"object"==typeof o&&o.network)&&e.addEventListener&&(e.addEventListener("load",n.captureLoad.bind(n)),e.addEventListener("DOMContentLoaded",n.captureDomContentLoaded.bind(n))),e[t]=n,n})()},Rollbar:s}},function(e,r){"use strict";function t(e,r,t){if(r.hasOwnProperty&&r.hasOwnProperty("addEventListener")){for(var o=r.addEventListener;o._rollbarOldAdd&&o.belongsToShim;)o=o._rollbarOldAdd;var n=function(r,t,n){o.call(this,r,e.wrap(t),n)};n._rollbarOldAdd=o,n.belongsToShim=t,r.addEventListener=n;for(var a=r.removeEventListener;a._rollbarOldRemove&&a.belongsToShim;)a=a._rollbarOldRemove;var l=function(e,r,t){a.call(this,e,r&&r._rollbar_wrapped||r,t)};l._rollbarOldRemove=a,l.belongsToShim=t,r.removeEventListener=l}}e.exports={captureUncaughtExceptions:function(e,r,t){if(e){var o;"function"==typeof r._rollbarOldOnError?o=r._rollbarOldOnError:e.onerror&&!e.onerror.belongsToShim&&(o=e.onerror,r._rollbarOldOnError=o);var n=function(){var t=Array.prototype.slice.call(arguments,0);!function(e,r,t,o){e._rollbarWrappedError&&(o[4]||(o[4]=e._rollbarWrappedError),o[5]||(o[5]=e._rollbarWrappedError._rollbarContext),e._rollbarWrappedError=null),r.handleUncaughtException.apply(r,o),t&&t.apply(e,o)}(e,r,o,t)};n.belongsToShim=t,e.onerror=n}},captureUnhandledRejections:function(e,r,t){if(e){"function"==typeof e._rollbarURH&&e._rollbarURH.belongsToShim&&e.removeEventListener("unhandledrejection",e._rollbarURH);var o=function(e){var t=e.reason,o=e.promise,n=e.detail;!t&&n&&(t=n.reason,o=n.promise),r&&r.handleUnhandledRejection&&r.handleUnhandledRejection(t,o)};o.belongsToShim=t,e._rollbarURH=o,e.addEventListener("unhandledrejection",o)}},wrapGlobals:function(e,r,o){if(e){var n,a,l="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(n=0;n<l.length;++n)e[a=l[n]]&&e[a].prototype&&t(r,e[a].prototype,o)}}}},function(e,r){"use strict";function t(e,r){this.impl=e(r,this),this.options=r,function(e){for(var r=function(e){return function(){var r=Array.prototype.slice.call(arguments,0);if(this.impl[e])return this.impl[e].apply(this.impl,r)}},t="log,debug,info,warn,warning,error,critical,global,configure,handleUncaughtException,handleUnhandledRejection,_createItem,wrap,loadFull,shimId,captureDomContentLoaded,captureLoad".split(","),o=0;o<t.length;o++)e[t[o]]=r(t[o])}(t.prototype)}t.prototype._swapAndProcessMessages=function(e,r){this.impl=e(this.options);for(var t,o,n;t=r.shift();)o=t.method,n=t.args,this[o]&&"function"==typeof this[o]&&("captureDomContentLoaded"===o||"captureLoad"===o?this[o].apply(this,[n[0],t.ts]):this[o].apply(this,n));return this},e.exports=t},function(e,r){"use strict";e.exports=function(e){return function(r){if(!r&&!window._rollbarInitialized){for(var t,o,n=(e=e||{}).globalAlias||"Rollbar",a=window.rollbar,l=function(e){return new a(e)},i=0;t=window._rollbarShims[i++];)o||(o=t.handler),t.handler._swapAndProcessMessages(l,t.messages);window[n]=o,window._rollbarInitialized=!0}}}}]);const n=t(4),a=t(0),l=t(3),i=new n;var s;console.log("Welcome to discordboats.club! Why are you looking here? :P"),console.log("%cðŸš« Warning! ðŸš«","color: red; font-weight: bold; font-size: x-large"),console.log("%cTyping anything here could make bad stuff happen!","color: #e91e63; font-size: large"),a(window).ready(async()=>{document.querySelectorAll(".modal").forEach(e=>l.Modal.init(e)),l.Dropdown.init(document.querySelector("#profile-dropdown-trigger"),{ecoverTrigger:!1}),document.querySelector("#log-out-indd").addEventListener("click",async e=>{await i.logOut(),window.localStorage.setItem("toastOnNext","Logged out"),"/"===window.location.pathname?window.location.reload():window.location.replace("/")}),window.localStorage.getItem("toastOnNext")&&(l.toast({html:window.localStorage.toastOnNext}),window.localStorage.removeItem("toastOnNext")),document.location.href.includes("/dashboard/new")?(l.FormSelect.init(a("select#newbot"),{classes:"newbot-dd-wrap"}),a("form").submit(async e=>{e.preventDefault(),console.log(e);let r=l.FormSelect.getInstance(a("select")).getSelectedValues()[0];"none"===r&&(r=void 0);try{await i.createBot({id:e.target[0].value,library:r,prefix:e.target[3].value,website:(s=e.target[4].value,""===s.trim()?void 0:s),invite:e.target[5].value||`https://discordapp.com/oauth2/authorize?client_id=${encodeURI(e.target[0].value)}&scope=bot&permissions=0`,shortDescription:e.target[6].value,longDescription:e.target[7].value}),l.toast({html:"Submitted bot!"})}catch(e){if("ValidationError"===e.message)return l.toast({html:"Invalid details!"});throw l.toast({html:"Error while submitting bot!"}),e}})):document.location.href.includes("/bot/")&&a("#delete-bot-action").click(async e=>{await i.deleteBot(document.querySelector("#delete-bot-modal").getAttribute("data-bot-id")),window.localStorage.setItem("toastOnNext","Deleted bot."),document.location.replace("/")})})},function(e,r,t){t(5),e.exports=t(1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,